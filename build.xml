<?xml version="1.0" encoding="utf-8"?>

<project name="RhinoWiki" default="compile" basedir=".">

  <target name="properties">
    <!-- Allow user to override default settings from build.properties -->
    <property file="build.local.properties" />
    <tstamp>
      <format property="implementation.date" pattern="yyyy MM dd"/>
    </tstamp>
    <property file="build.properties"/>

    <property name="dist.file" value="rhino-wiki-${version}.zip"/>
    <property name="lib.dir" value="lib"/>

    <path id="compile-classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <path id="run-classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
        <pathelement location="${classes}"/>
    </path>
  </target>

  <target name="init" depends="properties">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${dist.dir}"/>
  </target>

  <target name="start" depends="compile">
     <java classname="com.ectworks.rhinowiki.Main"
           classpathref="run-classpath"
           fork="yes"/>
  </target>

  <target name="compile" depends="init">
    <javac classpathref="compile-classpath"
           srcdir="src"
           destdir="${classes}"
           includes="com/**/*.java"
           deprecation="on"
           debug="${debug}"
           target="${target-jvm}"
           source="${source-level}"
       >
    </javac>

    <copy todir="${classes}"
          file="src/log4j.properties"/>

    <copy todir="${classes}">
      <fileset dir="src" includes="com/**/*.properties" />
      <fileset dir="src" includes="*.js" />
      <fileset dir="src" includes="*.tmpl" />
      <fileset dir="src" includes="*.wikipage" />
      <filterset>
      <filter token="IMPLEMENTATION.VERSION"
              value="${implementation.version}"/>
      </filterset>
    </copy>
  </target>

  <target name="dist" depends="deepclean,jar,copy-source,javadoc">
    <delete file="${dist.file}" />
    <zip destfile="${dist.file}">
      <fileset dir="${build.dir}" includes="${dist.name}/**"/>
    </zip>
  </target>

  <target name="javadoc" depends="init">
    <mkdir dir="${dist.dir}/javadoc"/>
    <javadoc sourcepath="src"
             destdir="${dist.dir}/javadoc"
             version="true"
             author="true"
             windowtitle="${Name}" />
  </target>

  <target name="copy-source" depends="init">
    <mkdir dir="${dist.dir}/src"/>
    <copy todir="${dist.dir}/src">
      <fileset dir="src"
               includes="**/*.java,**/*.properties,**/*.xml,manifest"/>
    </copy>

    <copy todir="${dist.dir}" file="build.xml"/>
    <copy todir="${dist.dir}" file="build.properties"/>

  </target>

  <target name="jar" depends="compile">
    <property name="jarfile" location="${dist.dir}/${rhinowiki.jar}"/>
    <jar jarfile="${jarfile}"
         basedir="${classes}"
         manifest="src/manifest"
     compress="${jar-compression}"
     />
  </target>


  <target name="clean" depends="properties">
    <delete quiet="true" file="${dist.dir}/${rhinowiki.jar}"/>
    <delete quiet="true" dir="${build.dir}"/>
  </target>

  <target name="deepclean" depends="properties">
    <delete quiet="true" dir="${build.dir}"/>
    <delete quiet="true" file="${dist.file}"/>
    <delete quiet="true" file="${dist.source-only-zip}"/>
  </target>

</project>
